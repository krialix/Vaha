apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-noarg'
apply plugin: 'kotlin-kapt'

//apply plugin: 'com.google.cloud.tools.endpoints-framework-client'

apply plugin: 'io.fabric'

android {
    compileSdkVersion compileSdk
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "com.vaha.android"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        //resConfigs "auto"

        splits.density.enable = !project.hasProperty('devBuild')
    }

    signingConfigs {
        debug {
            storeFile file("../keystore/debug.keystore")
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "SERVER_URL", '"https://vahaapp-dev.appspot.com/_ah/api/"'
        }

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false

            //versionNameSuffix ".debug"
            applicationIdSuffix ".debug"

            crunchPngs false

            ext.enableCrashlytics = false

            signingConfig signingConfigs.debug

            buildConfigField "String", "SERVER_URL", '"http://10.0.2.2:8080/_ah/api/"'
        }

        jsonServerTest {
            debuggable true
            minifyEnabled false
            shrinkResources false

            //versionNameSuffix ".debug"
            applicationIdSuffix ".debug"

            crunchPngs false

            ext.enableCrashlytics = false

            signingConfig signingConfigs.debug

            buildConfigField "String", "SERVER_URL", '"http://10.0.2.2:3000/"'
        }
    }

    dexOptions {
        preDexLibraries true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

kapt {
    correctErrorTypes = true
    useBuildCache = true
    mapDiagnosticLocations = true
}

project.android.buildTypes.all { buildType ->
    buildType.javaCompileOptions.annotationProcessorOptions.arguments = [
            validateEpoxyModelUsage     : String.valueOf(buildType.name == 'debug'),
            requireHashCodeInEpoxyModels: "true",
            requireAbstractEpoxyModels  : "false",
            implicitlyAddAutoModels     : "true"
    ]
}

noArg {
    annotation("com.vaha.android.util.NoArgs")
}

configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            final name = details.requested.name
            // force dependencies to use latest version of support libraries
            if (details.requested.group == 'com.android.support' && !name.contains('multidex')) {
                details.useVersion "$supportLibVersion"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Endpoints Framework v2
    /*endpointsServer project(path: ':server', configuration: 'endpoints')
    implementation 'com.google.api-client:google-api-client-android:1.23.0'*/

    // Android
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Network
    implementation "com.squareup.okhttp3:okhttp:$okHttp"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$dagger2Version"

    // Arch
    implementation "android.arch.lifecycle:viewmodel:$architectureComponentsVersion"
    implementation "android.arch.lifecycle:livedata:$architectureComponentsVersion"
    implementation "android.arch.lifecycle:common-java8:$architectureComponentsVersion"

    // Firebase
    releaseImplementation "com.google.firebase:firebase-core:$firebaseVersion"
    implementation "com.google.firebase:firebase-auth:$firebaseVersion"
    implementation "com.google.firebase:firebase-messaging:$firebaseVersion"
    implementation "com.google.firebase:firebase-database:$firebaseVersion"

    implementation 'com.androidhuman.rxfirebase2:firebase-auth:11.8.0.1'
    implementation 'com.androidhuman.rxfirebase2:firebase-database:11.8.0.1'

    // Conductor
    implementation "com.bluelinelabs:conductor:$conductorVersion"
    implementation 'com.bluelinelabs:conductor-archlifecycle:0.1.1'
    implementation "com.bluelinelabs:conductor-support:$conductorVersion"

    // RxJava 2
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    // Epoxy
    implementation "com.airbnb.android:epoxy:$epoxyVersion"
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"

    // ButterKnife
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation 'com.github.adhishlal:asdp:1.1'
    implementation 'com.squareup.moshi:moshi:1.5.0'
    implementation 'com.github.stfalcon:chatkit:0.2.2'
    implementation 'com.airbnb.android:lottie:2.5.0'
    implementation 'com.github.faruktoptas:FancyShowCaseView:1.0.0'
    implementation 'com.github.florent37:expansionpanel:1.1.1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }

    // Testing
    testImplementation "junit:junit:4.12"
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
}

apply plugin: 'com.google.gms.google-services'